
lab7_part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000017a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000126  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000017a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001ac  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000001ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000bb3  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000a6f  00000000  00000000  00000ddf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009cb  00000000  00000000  0000184e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000058  00000000  00000000  0000221c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000138e0  00000000  00000000  00002274  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000153  00000000  00000000  00015b54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00015ca7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0000484e  00000000  00000000  00015cc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	55 c0       	rjmp	.+170    	; 0xac <__ctors_end>
   2:	00 00       	nop
   4:	5b c0       	rjmp	.+182    	; 0xbc <__bad_interrupt>
   6:	00 00       	nop
   8:	59 c0       	rjmp	.+178    	; 0xbc <__bad_interrupt>
   a:	00 00       	nop
   c:	57 c0       	rjmp	.+174    	; 0xbc <__bad_interrupt>
   e:	00 00       	nop
  10:	55 c0       	rjmp	.+170    	; 0xbc <__bad_interrupt>
  12:	00 00       	nop
  14:	53 c0       	rjmp	.+166    	; 0xbc <__bad_interrupt>
  16:	00 00       	nop
  18:	51 c0       	rjmp	.+162    	; 0xbc <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4f c0       	rjmp	.+158    	; 0xbc <__bad_interrupt>
  1e:	00 00       	nop
  20:	4d c0       	rjmp	.+154    	; 0xbc <__bad_interrupt>
  22:	00 00       	nop
  24:	4b c0       	rjmp	.+150    	; 0xbc <__bad_interrupt>
  26:	00 00       	nop
  28:	49 c0       	rjmp	.+146    	; 0xbc <__bad_interrupt>
  2a:	00 00       	nop
  2c:	47 c0       	rjmp	.+142    	; 0xbc <__bad_interrupt>
  2e:	00 00       	nop
  30:	45 c0       	rjmp	.+138    	; 0xbc <__bad_interrupt>
  32:	00 00       	nop
  34:	43 c0       	rjmp	.+134    	; 0xbc <__bad_interrupt>
  36:	00 00       	nop
  38:	41 c0       	rjmp	.+130    	; 0xbc <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3f c0       	rjmp	.+126    	; 0xbc <__bad_interrupt>
  3e:	00 00       	nop
  40:	3d c0       	rjmp	.+122    	; 0xbc <__bad_interrupt>
  42:	00 00       	nop
  44:	3b c0       	rjmp	.+118    	; 0xbc <__bad_interrupt>
  46:	00 00       	nop
  48:	39 c0       	rjmp	.+114    	; 0xbc <__bad_interrupt>
  4a:	00 00       	nop
  4c:	37 c0       	rjmp	.+110    	; 0xbc <__bad_interrupt>
  4e:	00 00       	nop
  50:	35 c0       	rjmp	.+106    	; 0xbc <__bad_interrupt>
  52:	00 00       	nop
  54:	33 c0       	rjmp	.+102    	; 0xbc <__bad_interrupt>
  56:	00 00       	nop
  58:	31 c0       	rjmp	.+98     	; 0xbc <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2f c0       	rjmp	.+94     	; 0xbc <__bad_interrupt>
  5e:	00 00       	nop
  60:	2d c0       	rjmp	.+90     	; 0xbc <__bad_interrupt>
  62:	00 00       	nop
  64:	2b c0       	rjmp	.+86     	; 0xbc <__bad_interrupt>
  66:	00 00       	nop
  68:	29 c0       	rjmp	.+82     	; 0xbc <__bad_interrupt>
  6a:	00 00       	nop
  6c:	27 c0       	rjmp	.+78     	; 0xbc <__bad_interrupt>
  6e:	00 00       	nop
  70:	25 c0       	rjmp	.+74     	; 0xbc <__bad_interrupt>
  72:	00 00       	nop
  74:	23 c0       	rjmp	.+70     	; 0xbc <__bad_interrupt>
  76:	00 00       	nop
  78:	21 c0       	rjmp	.+66     	; 0xbc <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1f c0       	rjmp	.+62     	; 0xbc <__bad_interrupt>
  7e:	00 00       	nop
  80:	1d c0       	rjmp	.+58     	; 0xbc <__bad_interrupt>
  82:	00 00       	nop
  84:	1b c0       	rjmp	.+54     	; 0xbc <__bad_interrupt>
  86:	00 00       	nop
  88:	19 c0       	rjmp	.+50     	; 0xbc <__bad_interrupt>
  8a:	00 00       	nop
  8c:	17 c0       	rjmp	.+46     	; 0xbc <__bad_interrupt>
  8e:	00 00       	nop
  90:	15 c0       	rjmp	.+42     	; 0xbc <__bad_interrupt>
  92:	00 00       	nop
  94:	13 c0       	rjmp	.+38     	; 0xbc <__bad_interrupt>
  96:	00 00       	nop
  98:	11 c0       	rjmp	.+34     	; 0xbc <__bad_interrupt>
  9a:	00 00       	nop
  9c:	0f c0       	rjmp	.+30     	; 0xbc <__bad_interrupt>
  9e:	00 00       	nop
  a0:	0d c0       	rjmp	.+26     	; 0xbc <__bad_interrupt>
  a2:	00 00       	nop
  a4:	0b c0       	rjmp	.+22     	; 0xbc <__bad_interrupt>
  a6:	00 00       	nop
  a8:	09 c0       	rjmp	.+18     	; 0xbc <__bad_interrupt>
	...

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	d5 e0       	ldi	r29, 0x05	; 5
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	03 d0       	rcall	.+6      	; 0xc0 <main>
  ba:	33 c0       	rjmp	.+102    	; 0x122 <_exit>

000000bc <__bad_interrupt>:
  bc:	a1 cf       	rjmp	.-190    	; 0x0 <__vectors>

000000be <board_init>:
#include <asf.h>
#include <board.h>
#include <conf_board.h>

void board_init(void)
{
  be:	08 95       	ret

000000c0 <main>:
#define FPGA_BUS PORTD



int main (void)
{
  c0:	cf 93       	push	r28
  c2:	df 93       	push	r29
  c4:	cd b7       	in	r28, 0x3d	; 61
  c6:	de b7       	in	r29, 0x3e	; 62
  c8:	c0 54       	subi	r28, 0x40	; 64
  ca:	d1 09       	sbc	r29, r1
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	f8 94       	cli
  d0:	de bf       	out	0x3e, r29	; 62
  d2:	0f be       	out	0x3f, r0	; 63
  d4:	cd bf       	out	0x3d, r28	; 61
	/* Insert system clock initialization code here (sysclk_init()). */
	
	board_init();
  d6:	f3 df       	rcall	.-26     	; 0xbe <board_init>
	//Allocate ram to read from

	//Set Input/Output settings for ports
	DDRC = 0b10000000;
  d8:	80 e8       	ldi	r24, 0x80	; 128
  da:	87 b9       	out	0x07, r24	; 7
	DDRD = 0xff;
  dc:	8f ef       	ldi	r24, 0xFF	; 255
  de:	8a b9       	out	0x0a, r24	; 10



	 char buffer [64];
	 PORTC = 0x0;
  e0:	18 b8       	out	0x08, r1	; 8
  e2:	be 01       	movw	r22, r28
  e4:	6f 5b       	subi	r22, 0xBF	; 191
  e6:	7f 4f       	sbci	r23, 0xFF	; 255
	 int x = 0;
	 
		while (1){
	 for (int i = 0; i<64; i++){
		 x = &buffer[i];
		 PORTC = 0b10000000;
  e8:	40 e8       	ldi	r20, 0x80	; 128
		 FPGA_BUS =  x >> 8 ;
		 _delay_ms(250);
		 PORTC = 0x0;
		 FPGA_BUS = x && 0xFF;
  ea:	31 e0       	ldi	r19, 0x01	; 1
  ec:	ce 01       	movw	r24, r28
  ee:	01 96       	adiw	r24, 0x01	; 1
	 int x = 0;
	 
		while (1){
	 for (int i = 0; i<64; i++){
		 x = &buffer[i];
		 PORTC = 0b10000000;
  f0:	48 b9       	out	0x08, r20	; 8
		 FPGA_BUS =  x >> 8 ;
  f2:	9b b9       	out	0x0b, r25	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f4:	e3 e2       	ldi	r30, 0x23	; 35
  f6:	f4 ef       	ldi	r31, 0xF4	; 244
  f8:	31 97       	sbiw	r30, 0x01	; 1
  fa:	f1 f7       	brne	.-4      	; 0xf8 <main+0x38>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <main+0x3e>
  fe:	00 00       	nop
		 _delay_ms(250);
		 PORTC = 0x0;
 100:	18 b8       	out	0x08, r1	; 8
		 FPGA_BUS = x && 0xFF;
 102:	23 2f       	mov	r18, r19
 104:	00 97       	sbiw	r24, 0x00	; 0
 106:	09 f4       	brne	.+2      	; 0x10a <main+0x4a>
 108:	20 e0       	ldi	r18, 0x00	; 0
 10a:	2b b9       	out	0x0b, r18	; 11
 10c:	e3 e2       	ldi	r30, 0x23	; 35
 10e:	f4 ef       	ldi	r31, 0xF4	; 244
 110:	31 97       	sbiw	r30, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <main+0x50>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x56>
 116:	00 00       	nop
 118:	01 96       	adiw	r24, 0x01	; 1
	 char buffer [64];
	 PORTC = 0x0;
	 int x = 0;
	 
		while (1){
	 for (int i = 0; i<64; i++){
 11a:	86 17       	cp	r24, r22
 11c:	97 07       	cpc	r25, r23
 11e:	41 f7       	brne	.-48     	; 0xf0 <main+0x30>
 120:	e5 cf       	rjmp	.-54     	; 0xec <main+0x2c>

00000122 <_exit>:
 122:	f8 94       	cli

00000124 <__stop_program>:
 124:	ff cf       	rjmp	.-2      	; 0x124 <__stop_program>
